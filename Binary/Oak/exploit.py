def reverse():

    # got fromt 'javap -verbose Oak'
    data = [
        28767,
        24418,
        25470,
        29771,
        26355,
        31349,
        13032,
        30456,
        14663,
        27592,
        8916,
        29409,
        7348,
        17474,
        5124,
        3345,
        49357,
        61058,
        65159,
        53773,
        67886,
        72426,
        103728,
        158125,
        179542,
        166504,
        212101,
        282674,
        320873,
        329272,
        400021,
        479881,
        535081,
        599886,
        662294,
        731441,
        831284,
        947032,
        1021482,
    ]

    nums = []
    
    # get the array returned by `conv` function 
    for i in range(len(data)):
        nums.append(t(i * i) ^ data[i])

    # split the first half and print it
    print(split(nums))

# get the first 8 most significant bits of 2 bytes
# from each element of nums and make string from them
def split(nums):

    s = "" 

    for i in range(len(nums)):
        s += chr(nums[i] >> 8)

    return s
    

# `t` function in python
mem = {}
def t(n):
    if n in mem.keys():
        return mem[n]
    
    if n == 0:
        mem[0] = 0
        return mem[0]
    if n == 1:
        mem[1] = 1
        return mem[1]
    if n == 2:
        mem[2] = 3
        return mem[2]
    
    mem[n] = 3 * t(n - 1) - 3 * t(n - 2) + t(n - 3)
    return mem[n]


if __name__ == '__main__':
    reverse()
